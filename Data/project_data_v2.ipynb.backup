{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a72f9dd9-31d9-4b36-867b-71141ec9a81e",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import pandas as pd\n",
    "import pickle"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "6d3fd8c3-033e-4379-a8ce-5dc57ef82a64",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2.0.3'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pd.__version__"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "bc042337-125a-414d-a4b8-0bb051b833d6",
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(r'w:\\ltv_model_pd2.pcl', 'rb') as f:\n",
    "    bdl_data = pickle.load(f)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a8f6b4f7-8404-47ab-8bfe-0bc7dc71e4ed",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'1': 'TRAIN Datasets', '2': 'TEST Datasets'}\n"
     ]
    }
   ],
   "source": [
    "gen_info, train_data, test_data = bdl_data\n",
    "print(gen_info)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "854585c8-fb1f-475d-b7f0-f0c4841f2be8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'1': 'TRAIN_MODEL_FE', '2': 'TRAIN_MODEL_B_NUM', '3': 'TRAIN_MODEL_DPI'}\n"
     ]
    }
   ],
   "source": [
    "train_info, df_train_fe, df_train_bnum, df_train_dpi = train_data\n",
    "print(train_info)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "752f0685-c067-42cc-a4e6-252f1f1f63bd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(150005, 817)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ama_rchrgmnt_sum_max_mnt1</th>\n",
       "      <th>content_clc_mea_mnt1</th>\n",
       "      <th>content_cnt_max_mnt1</th>\n",
       "      <th>voice_out_short_part_max_mnt1</th>\n",
       "      <th>voice_mts_in_nrest_part_std_mnt1</th>\n",
       "      <th>num_act_days_max_mnt1</th>\n",
       "      <th>sms_roam_clc_min_mnt1</th>\n",
       "      <th>voice_in_cmpttrs_avg_durmin_mnt1</th>\n",
       "      <th>com_num_part_mea_mnt1</th>\n",
       "      <th>pay_avg_mea_mnt1</th>\n",
       "      <th>...</th>\n",
       "      <th>MV_Traf_mn_out_v_Min</th>\n",
       "      <th>MV_DOU_OT</th>\n",
       "      <th>MV_SERV_Y_WO_AF</th>\n",
       "      <th>MV_Migr_To</th>\n",
       "      <th>MV_SERV_RLH</th>\n",
       "      <th>MV_DOU_PPM_VF</th>\n",
       "      <th>MV_DOU_Neg_Bal</th>\n",
       "      <th>MV_ot_total</th>\n",
       "      <th>target</th>\n",
       "      <th>abon_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.032057</td>\n",
       "      <td>9.354249</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>3.590290</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.013873</td>\n",
       "      <td>7.773994</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12.792268</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.710052</td>\n",
       "      <td>1519005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.786566</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.032163</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12.792268</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.404844</td>\n",
       "      <td>1524490</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.214015</td>\n",
       "      <td>11.615193</td>\n",
       "      <td>1.001424</td>\n",
       "      <td>1.000164</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.002645</td>\n",
       "      <td>14.790617</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12.792268</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.394953</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>8.687248</td>\n",
       "      <td>1.000048</td>\n",
       "      <td>1.000104</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000851</td>\n",
       "      <td>12.792268</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.899284</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.134949</td>\n",
       "      <td>1543336</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.032057</td>\n",
       "      <td>10.831324</td>\n",
       "      <td>1.001323</td>\n",
       "      <td>1.003713</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.000099</td>\n",
       "      <td>10.269117</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>15.146626</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.095422</td>\n",
       "      <td>1543457</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 817 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Ama_rchrgmnt_sum_max_mnt1  content_clc_mea_mnt1  content_cnt_max_mnt1  \\\n",
       "0                        0.0              1.032057              9.354249   \n",
       "1                        0.0              0.000000              0.000000   \n",
       "2                        0.0              1.214015             11.615193   \n",
       "3                        0.0              0.000000              8.687248   \n",
       "4                        0.0              1.032057             10.831324   \n",
       "\n",
       "   voice_out_short_part_max_mnt1  voice_mts_in_nrest_part_std_mnt1  \\\n",
       "0                       0.000000                          0.000000   \n",
       "1                       0.000000                          0.000000   \n",
       "2                       1.001424                          1.000164   \n",
       "3                       1.000048                          1.000104   \n",
       "4                       1.001323                          1.003713   \n",
       "\n",
       "   num_act_days_max_mnt1  sms_roam_clc_min_mnt1  \\\n",
       "0               3.590290                    0.0   \n",
       "1               4.786566                    0.0   \n",
       "2               5.324077                    0.0   \n",
       "3               5.324077                    0.0   \n",
       "4               5.324077                    0.0   \n",
       "\n",
       "   voice_in_cmpttrs_avg_durmin_mnt1  com_num_part_mea_mnt1  pay_avg_mea_mnt1  \\\n",
       "0                               0.0               1.013873          7.773994   \n",
       "1                               0.0               1.032163          0.000000   \n",
       "2                               0.0               1.002645         14.790617   \n",
       "3                               0.0               1.000851         12.792268   \n",
       "4                               0.0               1.000099         10.269117   \n",
       "\n",
       "   ...  MV_Traf_mn_out_v_Min  MV_DOU_OT  MV_SERV_Y_WO_AF  MV_Migr_To  \\\n",
       "0  ...                   0.0   1.480453              NaN         0.0   \n",
       "1  ...                   0.0        NaN              NaN         0.0   \n",
       "2  ...                   0.0   1.480453              NaN         0.0   \n",
       "3  ...                   0.0   1.480453              NaN         0.0   \n",
       "4  ...                   0.0   1.480453              NaN         0.0   \n",
       "\n",
       "   MV_SERV_RLH  MV_DOU_PPM_VF  MV_DOU_Neg_Bal  MV_ot_total    target  abon_id  \n",
       "0          NaN      12.792268             NaN          0.0  0.710052  1519005  \n",
       "1          NaN      12.792268             NaN          NaN  1.404844  1524490  \n",
       "2          NaN      12.792268             NaN          0.0  1.394953  1529119  \n",
       "3          NaN      17.899284             NaN          0.0  1.134949  1543336  \n",
       "4          NaN      15.146626             NaN          0.0  1.095422  1543457  \n",
       "\n",
       "[5 rows x 817 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df_train_fe.shape)\n",
    "# df_train_fe['abon_id'] = df_train_fe['abon_id'].astype(int)\n",
    "df_train_fe.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "06ed5d63-1272-4cd5-a904-59efd08aba5a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(960706, 8)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bnum</th>\n",
       "      <th>call_cnt_out</th>\n",
       "      <th>call_cnt_in</th>\n",
       "      <th>call_dur_out</th>\n",
       "      <th>call_dur_in</th>\n",
       "      <th>cnt_sms_out</th>\n",
       "      <th>cnt_sms_in</th>\n",
       "      <th>abon_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>7104</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>1519005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>zdorro</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>4.210402</td>\n",
       "      <td>1519005</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4300</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>7104</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>contactgas</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         bnum  call_cnt_out  call_cnt_in  call_dur_out  call_dur_in  \\\n",
       "0        7104           0.0          0.0           0.0          0.0   \n",
       "1      zdorro           0.0          0.0           0.0          0.0   \n",
       "2        4300           0.0          0.0           0.0          0.0   \n",
       "3        7104           0.0          0.0           0.0          0.0   \n",
       "4  contactgas           0.0          0.0           0.0          0.0   \n",
       "\n",
       "   cnt_sms_out  cnt_sms_in  abon_id  \n",
       "0     1.480453    1.480453  1519005  \n",
       "1     0.000000    4.210402  1519005  \n",
       "2     1.480453    0.000000  1529119  \n",
       "3     1.480453    0.000000  1529119  \n",
       "4     0.000000    1.480453  1529119  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df_train_bnum.shape)\n",
    "# df_train_bnum['abon_id'] = df_train_bnum['abon_id'].astype(int)\n",
    "# df_train_bnum['bnum'] = df_train_bnum['bnum'].str.decode('utf-8')\n",
    "df_train_bnum.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "96a6e97c-a733-4626-9b50-bc567e0d5d67",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5393116, 6)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Application</th>\n",
       "      <th>SUM_of_Duration_sec</th>\n",
       "      <th>SUM_of_Volume_kb</th>\n",
       "      <th>SUM_of_Count_events</th>\n",
       "      <th>MAX_of_day_cnt</th>\n",
       "      <th>abon_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>175</td>\n",
       "      <td>20.202157</td>\n",
       "      <td>28.367294</td>\n",
       "      <td>2.206949</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>240</td>\n",
       "      <td>69.865759</td>\n",
       "      <td>83.300991</td>\n",
       "      <td>35.905444</td>\n",
       "      <td>17.0</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>254</td>\n",
       "      <td>89.396701</td>\n",
       "      <td>90.547840</td>\n",
       "      <td>33.571108</td>\n",
       "      <td>16.0</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>257</td>\n",
       "      <td>32.006461</td>\n",
       "      <td>22.960443</td>\n",
       "      <td>11.615193</td>\n",
       "      <td>6.0</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>258</td>\n",
       "      <td>99.946180</td>\n",
       "      <td>96.163177</td>\n",
       "      <td>51.433802</td>\n",
       "      <td>18.0</td>\n",
       "      <td>1529119</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Application  SUM_of_Duration_sec  SUM_of_Volume_kb  SUM_of_Count_events  \\\n",
       "0          175            20.202157         28.367294             2.206949   \n",
       "1          240            69.865759         83.300991            35.905444   \n",
       "2          254            89.396701         90.547840            33.571108   \n",
       "3          257            32.006461         22.960443            11.615193   \n",
       "4          258            99.946180         96.163177            51.433802   \n",
       "\n",
       "   MAX_of_day_cnt  abon_id  \n",
       "0             1.0  1529119  \n",
       "1            17.0  1529119  \n",
       "2            16.0  1529119  \n",
       "3             6.0  1529119  \n",
       "4            18.0  1529119  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df_train_dpi.shape)\n",
    "# df_train_dpi['abon_id'] = df_train_dpi['abon_id'].astype(int)\n",
    "df_train_dpi.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "4abc2131-91f5-41f4-80d4-02048123a818",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'1': 'TEST_MODEL_FE', '2': 'TEST_MODEL_B_NUM', '3': 'TEST_MODEL_DPI'}\n"
     ]
    }
   ],
   "source": [
    "test_info, df_test_fe, df_test_bnum, df_test_dpi = test_data\n",
    "print(test_info)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e6a429e3-adce-4a36-adcf-31d143858dcf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(149999, 817)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Ama_rchrgmnt_sum_max_mnt1</th>\n",
       "      <th>content_clc_mea_mnt1</th>\n",
       "      <th>content_cnt_max_mnt1</th>\n",
       "      <th>voice_out_short_part_max_mnt1</th>\n",
       "      <th>voice_mts_in_nrest_part_std_mnt1</th>\n",
       "      <th>num_act_days_max_mnt1</th>\n",
       "      <th>sms_roam_clc_min_mnt1</th>\n",
       "      <th>voice_in_cmpttrs_avg_durmin_mnt1</th>\n",
       "      <th>com_num_part_mea_mnt1</th>\n",
       "      <th>pay_avg_mea_mnt1</th>\n",
       "      <th>...</th>\n",
       "      <th>MV_Traf_mn_out_v_Min</th>\n",
       "      <th>MV_DOU_OT</th>\n",
       "      <th>MV_SERV_Y_WO_AF</th>\n",
       "      <th>MV_Migr_To</th>\n",
       "      <th>MV_SERV_RLH</th>\n",
       "      <th>MV_DOU_PPM_VF</th>\n",
       "      <th>MV_DOU_Neg_Bal</th>\n",
       "      <th>MV_ot_total</th>\n",
       "      <th>target</th>\n",
       "      <th>abon_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.032057</td>\n",
       "      <td>14.790617</td>\n",
       "      <td>1.011101</td>\n",
       "      <td>1.001349</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.003709</td>\n",
       "      <td>10.966652</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.286332</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>8.333536</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.040008</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.691679</td>\n",
       "      <td>1525260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>11.100026</td>\n",
       "      <td>1.000529</td>\n",
       "      <td>1.000267</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>13.469730</td>\n",
       "      <td>1.006129</td>\n",
       "      <td>13.065328</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.206949</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>17.346264</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.111863</td>\n",
       "      <td>1539870</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.0</td>\n",
       "      <td>1.109461</td>\n",
       "      <td>11.862541</td>\n",
       "      <td>1.004165</td>\n",
       "      <td>1.000251</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.007279</td>\n",
       "      <td>12.177678</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.830789</td>\n",
       "      <td>1543653</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>7.578965</td>\n",
       "      <td>1.027907</td>\n",
       "      <td>1.000889</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.274928</td>\n",
       "      <td>1.105223</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>12.792268</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.686715</td>\n",
       "      <td>1544419</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 817 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Ama_rchrgmnt_sum_max_mnt1  content_clc_mea_mnt1  content_cnt_max_mnt1  \\\n",
       "0                        0.0              1.032057             14.790617   \n",
       "1                        0.0              0.000000              8.333536   \n",
       "2                        0.0              0.000000             11.100026   \n",
       "3                        0.0              1.109461             11.862541   \n",
       "4                        0.0              0.000000              7.578965   \n",
       "\n",
       "   voice_out_short_part_max_mnt1  voice_mts_in_nrest_part_std_mnt1  \\\n",
       "0                       1.011101                          1.001349   \n",
       "1                       0.000000                          0.000000   \n",
       "2                       1.000529                          1.000267   \n",
       "3                       1.004165                          1.000251   \n",
       "4                       1.027907                          1.000889   \n",
       "\n",
       "   num_act_days_max_mnt1  sms_roam_clc_min_mnt1  \\\n",
       "0               5.324077                    0.0   \n",
       "1               5.324077                    0.0   \n",
       "2               5.324077                    0.0   \n",
       "3               5.324077                    0.0   \n",
       "4               5.324077                    0.0   \n",
       "\n",
       "   voice_in_cmpttrs_avg_durmin_mnt1  com_num_part_mea_mnt1  pay_avg_mea_mnt1  \\\n",
       "0                          0.000000               1.003709         10.966652   \n",
       "1                          0.000000               1.040008          0.000000   \n",
       "2                         13.469730               1.006129         13.065328   \n",
       "3                          0.000000               1.007279         12.177678   \n",
       "4                         11.274928               1.105223          0.000000   \n",
       "\n",
       "   ...  MV_Traf_mn_out_v_Min  MV_DOU_OT  MV_SERV_Y_WO_AF  MV_Migr_To  \\\n",
       "0  ...                   0.0        NaN              NaN         0.0   \n",
       "1  ...                   0.0   1.480453              NaN         0.0   \n",
       "2  ...                   0.0   2.206949              NaN         0.0   \n",
       "3  ...                   0.0        NaN              NaN         0.0   \n",
       "4  ...                   0.0        NaN              1.0         0.0   \n",
       "\n",
       "   MV_SERV_RLH  MV_DOU_PPM_VF  MV_DOU_Neg_Bal  MV_ot_total    target  abon_id  \n",
       "0          NaN            NaN             NaN          NaN  1.286332  1519212  \n",
       "1          NaN            NaN             NaN          0.0  0.691679  1525260  \n",
       "2          NaN      17.346264             NaN          0.0  1.111863  1539870  \n",
       "3          NaN            NaN             NaN          NaN  0.830789  1543653  \n",
       "4          NaN      12.792268             NaN          NaN  0.686715  1544419  \n",
       "\n",
       "[5 rows x 817 columns]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df_test_fe.shape)\n",
    "# df_test_fe['abon_id'] = df_test_fe['abon_id'].astype(int)\n",
    "df_test_fe.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a8a5e8d7-67ba-4560-a97e-dfcbc1c89309",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(965675, 8)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bnum</th>\n",
       "      <th>call_cnt_out</th>\n",
       "      <th>call_cnt_in</th>\n",
       "      <th>call_dur_out</th>\n",
       "      <th>call_dur_in</th>\n",
       "      <th>cnt_sms_out</th>\n",
       "      <th>cnt_sms_in</th>\n",
       "      <th>abon_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>111</td>\n",
       "      <td>3.59029</td>\n",
       "      <td>0.0</td>\n",
       "      <td>43.050494</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>7104</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>oschadbank</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.354249</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>privatbank</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>9.027098</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>tv9beregsas</td>\n",
       "      <td>0.00000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          bnum  call_cnt_out  call_cnt_in  call_dur_out  call_dur_in  \\\n",
       "0          111       3.59029          0.0     43.050494          0.0   \n",
       "1         7104       0.00000          0.0      0.000000          0.0   \n",
       "2   oschadbank       0.00000          0.0      0.000000          0.0   \n",
       "3   privatbank       0.00000          0.0      0.000000          0.0   \n",
       "4  tv9beregsas       0.00000          0.0      0.000000          0.0   \n",
       "\n",
       "   cnt_sms_out  cnt_sms_in  abon_id  \n",
       "0     0.000000    0.000000  1519212  \n",
       "1     1.480453    1.480453  1519212  \n",
       "2     0.000000    9.354249  1519212  \n",
       "3     0.000000    9.027098  1519212  \n",
       "4     0.000000    1.480453  1519212  "
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df_test_bnum.shape)\n",
    "# df_test_bnum['abon_id'] = df_test_bnum['abon_id'].astype(int)\n",
    "# df_test_bnum['bnum'] = df_test_bnum['bnum'].str.decode('utf-8')\n",
    "df_test_bnum.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "459ff3c8-e63f-4d6f-a037-a1cafe93a249",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(5390013, 6)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Application</th>\n",
       "      <th>SUM_of_Duration_sec</th>\n",
       "      <th>SUM_of_Volume_kb</th>\n",
       "      <th>SUM_of_Count_events</th>\n",
       "      <th>MAX_of_day_cnt</th>\n",
       "      <th>abon_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>240</td>\n",
       "      <td>4.210402</td>\n",
       "      <td>1.143214</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>254</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>22.879791</td>\n",
       "      <td>1.480453</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>258</td>\n",
       "      <td>36.747075</td>\n",
       "      <td>44.472751</td>\n",
       "      <td>17.626312</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>381</td>\n",
       "      <td>5.324077</td>\n",
       "      <td>3.073125</td>\n",
       "      <td>2.206949</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>546</td>\n",
       "      <td>29.386264</td>\n",
       "      <td>46.717145</td>\n",
       "      <td>8.333536</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1519212</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Application  SUM_of_Duration_sec  SUM_of_Volume_kb  SUM_of_Count_events  \\\n",
       "0          240             4.210402          1.143214             1.480453   \n",
       "1          254             5.324077         22.879791             1.480453   \n",
       "2          258            36.747075         44.472751            17.626312   \n",
       "3          381             5.324077          3.073125             2.206949   \n",
       "4          546            29.386264         46.717145             8.333536   \n",
       "\n",
       "   MAX_of_day_cnt  abon_id  \n",
       "0             1.0  1519212  \n",
       "1             1.0  1519212  \n",
       "2             1.0  1519212  \n",
       "3             1.0  1519212  \n",
       "4             2.0  1519212  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(df_test_dpi.shape)\n",
    "# df_test_dpi['abon_id'] = df_test_dpi['abon_id'].astype(int)\n",
    "df_test_dpi.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "11d5ee77-91c5-433d-9f0b-cf224be7a77e",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "venv",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
